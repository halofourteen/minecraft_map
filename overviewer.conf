# Minecraft Overviewer configuration file
import os
import sys

# Get the absolute path to the project root directory
# This is the directory where the config file is located
my_dir = os.path.dirname(os.path.abspath(__file__))
print(f"Config file directory: {my_dir}")

# Define absolute paths for textures, world, and output
texturepath = os.path.join(my_dir, "minecraft_assets", "1.21.4_optifine", "client.jar")
world_path = os.path.join(my_dir, "map_backup")
output_path = os.path.join(my_dir, "map")

# Print debug information
print(f"Current working directory: {os.getcwd()}")
print(f"Texture path: {texturepath}")
print(f"World path: {world_path}")
print(f"Output path: {output_path}")

# Check if the texture file exists
if not os.path.exists(texturepath):
    print(f"Warning: Texture file not found at {texturepath}")
else:
    print(f"Texture file found at {texturepath}")

# Check if the world directory exists
if not os.path.exists(world_path):
    print(f"Warning: World directory not found at {world_path}")
else:
    print(f"World directory found at {world_path}")
    # Check for level.dat
    if os.path.exists(os.path.join(world_path, "level.dat")):
        print(f"level.dat found in {world_path}")
    else:
        print(f"Warning: level.dat not found in {world_path}")

# Define the world and output directory
worlds["minecraft"] = world_path
outputdir = output_path

# Default render
renders["normalday"] = {
    "world": "minecraft",
    "title": "Дневной вид",
    "rendermode": "smooth_lighting",
    "dimension": "overworld",
    "imgformat": "png",
    "texturepath": texturepath
}
# Nether Renders
renders["nether"] = {
    "world": "minecraft",
    "title": "Нижний мир",
    "rendermode": "nether",
    "dimension": "nether",
    "imgformat": "png",
    "texturepath": texturepath
}

renders["end"] = {
    "world": "minecraft",
    "title": "Край",
    "rendermode": "smooth_lighting",
    "dimension": "end",
    "imgformat": "png",
    "texturepath": texturepath
}